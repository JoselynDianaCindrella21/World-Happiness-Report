<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Happinessreport_16258069165610' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='color' value='#ff0004' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='title'>
      <format attr='color' value='#ff0004' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='dash-title'>
      <format attr='color' value='#f17b79' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='color' value='#ff0004' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='tooltip'>
      <format attr='color' value='#ff0004' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='GDP Parameter' datatype='real' name='[Economy (GDP per Capita) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='1.8707656859999999' min='0.0' />
      </column>
      <column caption='Freedom Parameter' datatype='real' name='[Freedom Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='1.0' max='10.0' min='0.0' />
      </column>
      <column caption='Generosity Parameter' datatype='real' name='[Generosity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='0.83807516100000001' min='0.0' />
      </column>
      <column caption='Health Parameter' datatype='real' name='[Health (Life Expectancy) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='1.141' min='0.0' />
      </column>
      <column caption='Social Support Parameter' datatype='real' name='[Social Support Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='1.6439999999999999' min='0.0' />
      </column>
      <column caption='Trust Parameter' datatype='real' name='[Trust (Government Corruption) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='0.55191000000000001' min='0.0' />
      </column>
    </datasource>
    <datasource caption='World Happiness Report' inline='true' name='federated.1t49t91023o01u11p7xty0dvxfsq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0s2qrp30s5iiw314ut7q80psrztr'>
            <connection class='mysql' dbname='worldhappinessreport' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='2015+' type='union'>
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2015' table='[2015]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2016' table='[2016]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2017' table='[2017]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2018' table='[2018]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2019' table='[2019]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='2015+' type='union'>
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2015' table='[2015]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2016' table='[2016]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2017' table='[2017]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2018' table='[2018]' type='table' />
          <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2019' table='[2019]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social Support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social Support]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Social Support</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[2015+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='3' name='LROOT_S1' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' value=' Economy (GDP per Capita)' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' value=' Freedom' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' value=' Generosity' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]&quot;' value=' Happiness Score' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' value=' Health (Life Expectancy)' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' value='Social Support' />
          <alias key='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' value='Trust' />
        </aliases>
      </column>
      <column caption='Happiness score region wise' datatype='real' name='[Calculation_965177750393483264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Region]:AVG([Happiness Score])}' />
      </column>
      <column caption='generosity-region wise' datatype='real' name='[Calculation_965177750394691585]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Region]:AVG([Generosity])}' />
      </column>
      <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Deteriorates&quot;'>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Improves&quot;'>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Congo (Brazzaville)&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Romania&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Freedom (bin)' datatype='integer' name='[Freedom (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-4' formula='[Freedom]' peg='0' size='0.0243' />
      </column>
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Generosity (bin)' datatype='integer' name='[Generosity (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-4' formula='[Generosity]' peg='0' size='0.0285' />
      </column>
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Health (Life Expectancy) (bin)' datatype='integer' name='[Health (Life Expectancy) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-3' formula='[Health (Life Expectancy)]' peg='0' size='0.038' />
      </column>
      <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Region]' default='&quot;Middle&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Bottom&quot;'>
            <value>&quot;South Asia&quot;</value>
            <value>&quot;Sub-Saharan Africa&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Top&quot;'>
            <value>&quot;North America and ANZ&quot;</value>
            <value>&quot;Western Europe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Trust (Government Corruption) (bin)' datatype='integer' name='[Trust (Government Corruption) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-3' formula='[Trust (Government Corruption)]' peg='0' size='0.019' />
      </column>
      <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Union' datatype='table' name='[__tableau_internal_object_id__].[2015_3385778E5B7240B59AC2F8E0FAE04B28]' role='measure' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Avg' name='[avg:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Count' name='[cnt:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Count' name='[cnt:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Count' name='[cnt:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption)]' derivation='Count' name='[cnt:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social Support]' derivation='Sum' name='[sum:Social Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption)]' derivation='Sum' name='[sum:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Joselyn Cindrella M/Desktop/Tableau/World Happiness Report.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 12:34:11 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='World Happiness Report' increment-value='%null%' refresh-type='create' rows-inserted='781' timestamp-start='2021-07-01 12:34:11.580' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>2015+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>2015+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness Rank</remote-alias>
              <ordinal>2</ordinal>
              <family>2015+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness Score</remote-alias>
              <ordinal>3</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>715</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economy (GDP per Capita)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economy (GDP per Capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economy (GDP per Capita)</remote-alias>
              <ordinal>4</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>741</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social Support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social Support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social Support</remote-alias>
              <ordinal>5</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>731</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health (Life Expectancy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health (Life Expectancy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health (Life Expectancy)</remote-alias>
              <ordinal>6</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>704</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>7</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trust (Government Corruption)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trust (Government Corruption)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trust (Government Corruption)</remote-alias>
              <ordinal>8</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>9</ordinal>
              <family>2015+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>663</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>10</ordinal>
              <family>2015+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_3385778E5B7240B59AC2F8E0FAE04B28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.886628' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.113372' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East and North Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America and ANZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commonwealth of Independent States&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='Ratings/3bw.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='Thin Arrows/corruption.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='Thin Arrows/corruption.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='Thin Arrows/freedom.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='Thin Arrows/freedom.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]&quot;</bucket>
            </map>
            <map to='Thin Arrows/freedom.png'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;Improves&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Deteriorates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#0000ff'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]:1&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]:1&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]:1&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]:1&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Social Support:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Trust (Government Corruption):qk]:1&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]:1&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]:1&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Union' id='2015_3385778E5B7240B59AC2F8E0FAE04B28'>
            <properties context=''>
              <relation all='true' name='2015+' type='union'>
                <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2015' table='[2015]' type='table' />
                <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2016' table='[2016]' type='table' />
                <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2017' table='[2017]' type='table' />
                <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2018' table='[2018]' type='table' />
                <relation connection='mysql.0s2qrp30s5iiw314ut7q80psrztr' name='2019' table='[2019]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Q0-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#d5d5d5</color>
                <color>#bfbfbf</color>
                <color>#aaaaaa</color>
                <color>#959595</color>
                <color>#7f7f7f</color>
                <color>#6a6a6a</color>
                <color>#555555</color>
                <color>#3f3f3f</color>
                <color>#2a2a2a</color>
                <color>#151515</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
              <tooltip column='[federated.1t49t91023o01u11p7xty0dvxfsq].[attr:Region:nk]' />
              <geometry column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[Latitude (generated)]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6B51F1B8-26C0-47D9-97EF-00583CE3CFDF}' />
    </worksheet>
    <worksheet name='Q0-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' />
              <size column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E9799DE7-A0DA-46BF-996D-CF5010CA0E3E}' />
    </worksheet>
    <worksheet name='Q0-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='member' level='[none:Table Name:nk]' member='&quot;2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='rows' value='Happiness Score' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{2DF43E75-CF95-469F-B260-40B08B42AE54}' />
    </worksheet>
    <worksheet name='Q1-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' scope='rows' value=' Freedom' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='106' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{B2777E57-7B20-487F-B459-64D029547F6D}' />
    </worksheet>
    <worksheet name='Q1-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='rows' value='Economy (GDP per Capita)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='117' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{CBE9E1AC-AD49-42E3-9077-26A44B0A85B4}' />
    </worksheet>
    <worksheet name='Q1-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somaliland region&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' scope='rows' value='Generosity' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='106' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{6A995B52-E531-4C17-89FE-B2EC482B6035}' />
    </worksheet>
    <worksheet name='Q1-4'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' scope='rows' value=' Health (Life Expectancy)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='95' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{47577656-A80F-49AC-9BC7-4B2BAEECB655}' />
    </worksheet>
    <worksheet name='Q1-5'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' scope='rows' value=' Social Support' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='93' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{517C5A6B-D435-470F-9D4E-429A65FE9BCF}' />
    </worksheet>
    <worksheet name='Q1-6'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somaliland region&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' scope='rows' value='Trust (Government Corruption)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='99' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{C323A847-8141-44E0-9D65-1802D8389B99}' />
    </worksheet>
    <worksheet name='Q2-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Deteriorates&quot;'>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Improves&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Romania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Avg' name='[avg:Happiness Rank:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group)]' member='&quot;Deteriorates&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Improves&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo (Brazzaville)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='false'>&lt;</run>
                <run bold='false'>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:ok]</run>
                <run bold='false'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)])</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{2A6B3DD0-4949-427A-BEE8-8811C6A2C61B}' />
    </worksheet>
    <worksheet name='Q2-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Deteriorates&quot;'>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Improves&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Romania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group)]' member='&quot;Deteriorates&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Improves&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='level-members' level='[none:Table Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
              <size column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#f5f5f5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</cols>
      </table>
      <simple-id uuid='{B7023A7B-56A1-4EF7-9ACA-DF338B1C37C2}' />
    </worksheet>
    <worksheet name='Q2-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Deteriorates&quot;'>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Improves&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Romania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group)]' member='&quot;Deteriorates&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Improves&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{E5D3C95B-E878-4F18-AC0A-E832971D36A1}' />
    </worksheet>
    <worksheet name='Q2-4'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Deteriorates&quot;'>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Improves&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Romania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group)]' member='&quot;Deteriorates&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Improves&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{F774074A-B1B9-4F0D-8E87-8BA9831F28C2}' />
    </worksheet>
    <worksheet name='Q2-5'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column caption='Changing countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Deteriorates&quot;'>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Improves&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Romania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group)]' member='&quot;Deteriorates&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Improves&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{D75ED7C6-4485-4C90-A94A-DFDDF65CEF4B}' />
    </worksheet>
    <worksheet name='Q3-1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Status of Health(Worldwide)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column aggregation='None' caption='Health (Life Expectancy) (bin)' datatype='integer' name='[Health (Life Expectancy) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-3' formula='[Health (Life Expectancy)]' peg='0' size='0.038' />
            </column>
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Count' name='[cnt:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy) (bin)]' derivation='None' name='[none:Health (Life Expectancy) (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Health (Life Expectancy) (bin):qk]' scope='cols' value='Health (Life Expectancy) ' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]' scope='rows' value='Count of Country' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]' num-steps='2' palette='tableau-orange-blue-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Health (Life Expectancy) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Health (Life Expectancy) (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4D526B83-8515-406D-90E6-94937DB02C5F}' />
    </worksheet>
    <worksheet name='Q3-2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Status of Generosity (Worldwide)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column aggregation='None' caption='Generosity (bin)' datatype='integer' name='[Generosity (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-4' formula='[Generosity]' peg='0' size='0.0285' />
            </column>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Count' name='[cnt:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity (bin)]' derivation='None' name='[none:Generosity (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Generosity (bin):qk]' scope='cols' value='Generosity ' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]' scope='rows' value='Count of Country' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f182a4</color>
                <color>#ee8aa9</color>
                <color>#ec93ae</color>
                <color>#ea9bb3</color>
                <color>#e8a4b9</color>
                <color>#e6acbd</color>
                <color>#e3b4c2</color>
                <color>#e1bbc7</color>
                <color>#dfc3cc</color>
                <color>#ddcad0</color>
                <color>#dbd2d4</color>
                <color>#d9d9d9</color>
                <color>#dcdcd9</color>
                <color>#dfdfda</color>
                <color>#e3e2da</color>
                <color>#e6e5da</color>
                <color>#eae8db</color>
                <color>#edebdb</color>
                <color>#f1eedb</color>
                <color>#f4f1db</color>
                <color>#f8f4db</color>
                <color>#fbf7db</color>
                <color>#fffbdb</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Generosity (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Generosity (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{CEA15626-C97E-4F71-B496-9815B6D16B3E}' />
    </worksheet>
    <worksheet name='Q3-3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Comparison between Generosity and Health (Regionwise)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='level-members' level='[none:Table Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' scope='rows' value='Score ' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline1' value='bp_gray50' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8CA438DA-F4E8-4B00-94D8-5BC3DC4B9419}' />
    </worksheet>
    <worksheet name='Q3-4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Checking if co-relation exists between Health and Generosity </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' scope='cols' value=' Health (Life Expectancy)' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' scope='rows' value=' Generosity' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1076' />
                <format attr='maxwidth' value='1076' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-color' value='#ff000467' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]</cols>
      </table>
      <simple-id uuid='{70A86198-2338-49CF-94EF-E4DB3211D87F}' />
    </worksheet>
    <worksheet name='Q4-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='cols' value=' Happiness Score' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-color' value='#55555567' />
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</cols>
      </table>
      <simple-id uuid='{7CFC814C-9E20-4F61-A033-C338A5C4967C}' />
    </worksheet>
    <worksheet name='Q4-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' palette='tableau-orange-blue-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' />
              <size column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6AA9A8CF-C89B-4584-AA37-CFE1BC78914C}' />
    </worksheet>
    <worksheet name='Q4-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Region]' default='&quot;Middle&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Bottom&quot;'>
                  <value>&quot;South Asia&quot;</value>
                  <value>&quot;Sub-Saharan Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Top&quot;'>
                  <value>&quot;North America and ANZ&quot;</value>
                  <value>&quot;Western Europe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]'>
            <groupfilter function='member' level='[Region (group)]' member='&quot;Top&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='rows' value=' Happiness Score' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='cols' value=' Economy (GDP per Capita)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</cols>
      </table>
      <simple-id uuid='{E0F91849-043B-4192-88CA-462195CF0886}' />
    </worksheet>
    <worksheet name='Q4-4'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Region]' default='&quot;Middle&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Bottom&quot;'>
                  <value>&quot;South Asia&quot;</value>
                  <value>&quot;Sub-Saharan Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Top&quot;'>
                  <value>&quot;North America and ANZ&quot;</value>
                  <value>&quot;Western Europe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]'>
            <groupfilter function='member' level='[Region (group)]' member='&quot;Top&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='member' level='[none:Table Name:nk]' member='&quot;2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' num-steps='4' palette='red_blue_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
              <tooltip column='[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Rank:qk]' />
              <tooltip column='[federated.1t49t91023o01u11p7xty0dvxfsq].[attr:Region:nk]' />
              <geometry column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[Latitude (generated)]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32FDDE75-83AB-4E54-ABDD-18EB26F890E6}' />
    </worksheet>
    <worksheet name='Q5-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Avg' name='[avg:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Score:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' member-value='&quot;India&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' field-type='quantitative' max='4.5999999999999996' min='4.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='rows' value=' Happiness Score' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:qk]' scope='rows' value=' Happiness Rank' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='122' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] * ([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Rank:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]))</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{A64299F8-9CB4-4320-BDC1-EF9CAFC57D5E}' />
    </worksheet>
    <worksheet name='Q5-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='level-members' level='[none:Table Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' scope='rows' value='Score' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0483564E-CDB1-4C58-9EB1-D5BE56F7EA5A}' />
    </worksheet>
    <worksheet name='Q5-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' scope='rows' value='Trust (Government Corruption)' />
            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' scope='rows' value=' Trust (Government Corruption)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{DE26EDBF-38F3-45F2-B723-5499E36983F5}' />
    </worksheet>
    <worksheet name='Q5-4'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' scope='rows' value=' Freedom' />
            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' scope='rows' value=' Freedom' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{A23F8AC5-125E-4C3A-8539-FD0A96656728}' />
    </worksheet>
    <worksheet name='Q5-5'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' scope='rows' value=' Social Support' />
            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' scope='rows' value='Social Support' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{1970FBF1-CE1A-4CA2-8C1D-089874645DDC}' />
    </worksheet>
    <worksheet name='Q5-6'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{4A983421-02CE-4965-991F-523B7DA507DB}' />
    </worksheet>
    <worksheet name='Q5-7'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='16' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='17' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{03D47901-474A-4820-9963-8D1796990615}' />
    </worksheet>
    <worksheet name='Q5-8'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='17' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='18' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='19' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk])</cols>
      </table>
      <simple-id uuid='{A7FEB34A-102C-4190-85A8-719429DF385C}' />
    </worksheet>
    <worksheet name='Q6-1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Status of Government Trust (Worldwide)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column aggregation='None' caption='Trust (Government Corruption) (bin)' datatype='integer' name='[Trust (Government Corruption) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-3' formula='[Trust (Government Corruption)]' peg='0' size='0.019' />
            </column>
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Count' name='[cnt:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption) (bin)]' derivation='None' name='[none:Trust (Government Corruption) (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]' scope='rows' value='Count of Countries' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Trust (Government Corruption) (bin):qk]' scope='cols' value='Trust ' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffd0fd</color>
                <color>#fbd1f9</color>
                <color>#f8d2f6</color>
                <color>#f4d3f3</color>
                <color>#f1d4ef</color>
                <color>#edd5ec</color>
                <color>#ead6e9</color>
                <color>#e6d7e6</color>
                <color>#e3d7e2</color>
                <color>#dfd8df</color>
                <color>#dcd8dc</color>
                <color>#d9d9d9</color>
                <color>#a9cee6</color>
                <color>#96c2e1</color>
                <color>#88b6d9</color>
                <color>#7aabd0</color>
                <color>#6d9fc6</color>
                <color>#6192bc</color>
                <color>#5787b3</color>
                <color>#4c7ca9</color>
                <color>#42709e</color>
                <color>#386592</color>
                <color>#2e5a87</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Trust (Government Corruption) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Trust (Government Corruption) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{6538A63F-42FD-4777-B56F-820363CAEF81}' />
    </worksheet>
    <worksheet name='Q6-2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Status of Freedom(Worldwide)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column aggregation='None' caption='Freedom (bin)' datatype='integer' name='[Freedom (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-4' formula='[Freedom]' peg='0' size='0.0243' />
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Count' name='[cnt:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom (bin)]' derivation='None' name='[none:Freedom (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]' scope='rows' value='Count of Countries' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Freedom (bin):qk]' scope='cols' value='Freedom ' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#bcb4b4</color>
                <color>#beb7b7</color>
                <color>#c1baba</color>
                <color>#c3bdbd</color>
                <color>#c6c1c1</color>
                <color>#c9c4c4</color>
                <color>#cbc7c7</color>
                <color>#cecbcb</color>
                <color>#d1cece</color>
                <color>#d3d2d2</color>
                <color>#d6d5d5</color>
                <color>#d9d9d9</color>
                <color>#d8d8dc</color>
                <color>#d7d8df</color>
                <color>#d6d7e3</color>
                <color>#d5d7e6</color>
                <color>#d3d6ea</color>
                <color>#d2d5ed</color>
                <color>#d0d4f1</color>
                <color>#ced3f4</color>
                <color>#cdd1f8</color>
                <color>#cbd0fb</color>
                <color>#c9cfff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Freedom (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[Freedom (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A67581CB-11E6-4A56-B998-2901BAA2F4DA}' />
    </worksheet>
    <worksheet name='Q6-3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Comparison between Freedom and Government Trust </run>
            <run fontsize='10'>(Throughtout the World)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Sum' name='[sum:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Trust (Government Corruption):qk]&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' direction='ASC' />
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' value='79' />
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' value='79' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' scope='rows' value=' Freedom' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' scope='rows' value=' Trust (Government Corruption)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' value='59' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Freedom:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk])</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{620AE2E6-788A-4AAE-976F-0F90B494830A}' />
    </worksheet>
    <worksheet name='Q6-4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Region-Freedom and Trust</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
            <groupfilter function='level-members' level='[none:Table Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='rows' value=' Happiness Score' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' scope='rows' value='Score' />
            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' field-type='quantitative' max='8.0' min='4.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' />
              <shape column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk])</rows>
        <cols>([federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk] / [federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7AFE8E1D-FEE2-4394-925E-61AC40B0831F}' />
    </worksheet>
    <worksheet name='Q6-5'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Freedom])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' scope='rows' value='Freedom' />
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' scope='rows' value='Trust (Government Corruption)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' value='78' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' />
              <lod column='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk] + [federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk])</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{A28B950F-625D-477F-8EDC-3AA69DD760F8}' />
    </worksheet>
    <worksheet name='Q7-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Happiness Score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' scope='rows' value=' Happiness Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</rows>
        <cols>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{A28D3C1D-A87E-41F0-BCD4-A99FDFDF1DD7}' />
    </worksheet>
    <worksheet name='Q7-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Report' name='federated.1t49t91023o01u11p7xty0dvxfsq' />
          </datasources>
          <datasource-dependencies datasource='federated.1t49t91023o01u11p7xty0dvxfsq'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='49.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='10.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Avg' name='[avg:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]&quot;</bucket>
              <bucket>&quot;[federated.1t49t91023o01u11p7xty0dvxfsq].[sum:Freedom:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Happiness Score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</column>
            <column>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
              <wedge-size column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' />
              <text column='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A2B24730-AA10-43FC-A7AF-470D1E23ECD1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Bottom Problems' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#ff0000' fontsize='22'>How to become happy as a country?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='color' value='#555555' />
          <format attr='background-color' value='#ff9d9a' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5923' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='6852' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83044' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='16027'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q7-1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Q7-1'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' field-type='quantitative' max='10.0' min='0.0' range-type='fixed' scope='rows' type='space' />
                          </style-rule>
                        </style>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' shelf='columns' />
                          </shelf-sorts>
                        </shelf-sort-deltas>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q7-2' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='13372' id='6' story-point-id='1' w='15488' x='6037' y='27093'>
          <formatted-text>
            <run fontsize='10'>This graph shows the happiness scores of the bottom most countries which we are going study about.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='24767' hidden='true' id='7' story-point-id='2' w='22073' x='62927' y='43837'>
          <formatted-text>
            <run fontsize='10'>From the pie chart we can see that these contries are supposed to focus more on its Freedom, Trust and Generosity to go to better positions in the world scale. Even though the Economy and Health is higher comparing to other factors,it still would need concentration since it is lower when compared to other countries.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{179AADBE-96E6-4170-A454-60555A8DADB4}' />
    </dashboard>
    <dashboard name='Economy and happiness' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false'>Does money actually buy happiness?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#333333' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84089' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='14982'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q4-1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Q4-1'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='rows' value=' Economy (GDP per Capita)' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q4-2' id='2' />
                  <story-point captured-sheet='Q4-3' id='3' />
                  <story-point captured-sheet='Q4-4' id='4'>
                    <capturedDeltas>
                      <worksheet name='Q4-4'>
                        <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]'>
                          <groupfilter function='member' level='[Region (group)]' member='&quot;Bottom&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='36860' hidden='true' id='6' story-point-id='3' w='35915' x='52012' y='53488'>
          <formatted-text>
            <run fontsize='10'>This scatter plot splits all the countries into 3 categories namely top,bottom and middle with respect to region. If we see the countries in the top group we can view that there is a linear trend line which has a large inclination towards the top showing a strong positibe co-relation,meaning that economy has played a major role towards the happiness score in the list of top countries. On the other hand the countries in the least group also shows a inclination towards the top but the angle is too low which implies a weak positive co-relation meaning low economy is not the only reason for their least happiness score. And the mid range countries has a mediocre inclination towards the top. So, we can understand from the graph is that Economy(GDP per capita) is one of the main reason for the happiness score but the impact is different for each region.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='22907' id='7' story-point-id='1' w='21037' x='7866' y='25465'>
          <formatted-text>
            <run fontsize='10'>This graph shows a comparison between Happiness score and Economy(GDP per capita). A linear trendline has been plotted on the scatter plot,in which the line shows a large inclination and points are closer to the line. This shows that there is a positive co-relation between both the factors.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='55233' hidden='true' id='8' story-point-id='2' w='9695' x='89390' y='25349'>
          <formatted-text>
            <run fontsize='10'>This tree map shws the Economy(GDP per capita) score of all the regions with respect to happiness score. From the tree map we can view that North America and ANZ and Western Europe has the highest score. On the other hand South Asia and Sub-Saharan Africa has the least score in both the factors.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='49302' hidden='true' id='9' story-point-id='4' w='9634' x='89573' y='49070'>
          <formatted-text>
            <run fontsize='10'>We can visualize that the top countries are following the same pattern in all the years,by seeing their color codes.On the other hand the bottom countries are continuously varying.Hence we can conclude that the countries in the top are stable than the ones in the bottom.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{B0D420DC-8066-4CBD-B67D-BA3269C8A555}' />
    </dashboard>
    <dashboard name='Freedom and trust' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#ff0000' fontsize='22'>Of the people, by the people, for the people...</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#555555' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5923' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='6852' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83044' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='16027'>
              <flipboard active-id='2' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q6-1' id='2' />
                  <story-point captured-sheet='Q6-2' id='1' />
                  <story-point captured-sheet='Q6-3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Q6-3'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q6-4' id='4' />
                  <story-point captured-sheet='Q6-5' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18372' id='6' story-point-id='2' w='19329' x='62927' y='23140'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>As most of the countries have given their score between 0.02 to 0.14, we can say that the Trust(Government Corruption) score on an average is low in most of the countries as per people&apos;s opinion. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='12791' hidden='true' id='7' story-point-id='1' w='23841' x='7378' y='24884'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>As most of the countries have given their score between 0.30 to 0.60, we can say that the Freedom score on an average is high in most of the countries as per people&apos;s opinion. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='56163' hidden='true' id='8' story-point-id='3' w='10183' x='88841' y='32326'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>From the given graph, we conclude that the factors didn’t have any correlation with each other. Also, according to people&apos;s opinion, the sense of Freedom is higher when compared to the trust towards government. Another point to note is Trust towards government has negligible change, whereas Freedom is varing highly.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='32907' hidden='true' id='9' story-point-id='4' w='9451' x='89756' y='47907'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The region of North America and ANZ has highest score in both the factors, hence has the highest happiness score. There is a big gap between the factors for all the regions.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='27558' hidden='true' id='10' story-point-id='5' w='9268' x='89756' y='34767'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>We can also see that from the top 10 countries having high score of freedom, Denmark has the highest trust towards the government.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{6C485072-A2AA-4FE2-95F5-6B9AF4CD8646}' />
    </dashboard>
    <dashboard name='Generosity and health' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false'>Is being Generous good for our Health?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#555555' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84089' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='14982'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q3-1' id='1' />
                  <story-point captured-sheet='Q3-2' id='2' />
                  <story-point captured-sheet='Q3-3' id='3' />
                  <story-point captured-sheet='Q3-4' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18372' id='6' story-point-id='1' w='19268' x='6280' y='24419'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>As most of the countries have given their score between 0.50 to 0.90, we can say that the Health(Life Expectancy)score on an average is high in most of the countries as per people&apos;s opinion.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='16744' hidden='true' id='7' story-point-id='2' w='19451' x='52317' y='29070'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>As most of the countries have given their score between 0.05 to 0.30, we can say that theGenerosity score on an average is low in most of the countries as per people&apos;s opinion.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='24535' hidden='true' id='8' story-point-id='3' w='20549' x='14085' y='27907'>
          <formatted-text>
            <run fontsize='10'>From these boxplots we can see that the score given by people for Generosity is really less than Health. North America and ANZ is in the top in both the factors,whereas Sub-Saharan Africa is in the least in Health(Life Expectancy). Central and East Europe is the bottom most region in terms of Generosity. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='24070' hidden='true' id='9' story-point-id='4' w='24329' x='6707' y='22093'>
          <formatted-text>
            <run fontsize='10'>Through this graph we can understand that there is some kind of co-relation found between the health and generosity as most of the scatter points lie near to the trendline. The trendline shows an inclination which implies that they have a positive co-relation. And,since the inclination angle is less, it follows a weak positive co-relation trend.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{14A65053-713B-41ED-96EE-AFFB12D40169}' />
    </dashboard>
    <dashboard name='India' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false'>India And It&apos;s Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#333333' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84089' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='14982'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q5-1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Q5-1'>
                        <style delta-type='removed'>
                          <style-rule element='worksheet'>
                            <format attr='display-field-labels' scope='cols' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q5-2' id='2' />
                  <story-point captured-sheet='Q5-3' id='11' />
                  <story-point captured-sheet='Q5-4' id='12' />
                  <story-point captured-sheet='Q5-5' id='13' />
                  <story-point captured-sheet='Q5-6' id='14'>
                    <capturedDeltas>
                      <worksheet name='Q5-6'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' scope='rows' value=' Generosity' />
                            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' scope='rows' value='Generosity' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q5-7' id='15'>
                    <capturedDeltas>
                      <worksheet name='Q5-7'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' scope='rows' value='Health (Life Expectancy)' />
                            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Health (Life Expectancy):qk]' scope='rows' value=' Health (Life Expectancy)' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q5-8' id='16'>
                    <capturedDeltas>
                      <worksheet name='Q5-8'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='rows' value='Economy (GDP per Capita)' />
                            <format attr='title' class='1' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='rows' value=' Economy (GDP per Capita)' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='17209' id='6' story-point-id='1' w='21463' x='11220' y='75814'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The rank is given based on which position India is present in the world regarding happiness, whereas the score would give a much more clear picture regarding the changes that would have happened in India throughout the years.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='11395' id='7' story-point-id='1' w='24512' x='64146' y='23488'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>In this graph, we can see that the happiness rank and score of India has been decreasing every year, for the past 5 years. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='14419' hidden='true' id='8' story-point-id='2' w='15366' x='69146' y='26047'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>In the below graph, we can see the factors that would have affected India to have such a low happiness score.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='30233' hidden='true' id='9' story-point-id='11' w='24390' x='8720' y='21860'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Trust(government corruption) yearwise. Trust has continuously increased from 2015 to 2018 and had a sudden downfall in the year 2019. We can see that in the year 2019, one of the main reasons for decrease in happiness score would be the people&apos;s trust towards goverment. Studies say that Central Government was accused for destroying democratic institutions and processes after the election was conducted.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='25465' hidden='true' id='10' story-point-id='12' w='21707' x='8720' y='21512'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Freedom yearwise. The Freedom has continuously increased from 2015 to 2018 and had a sudden downfall in the year 2019. We can see that in the year 2019, one of the main reasons for decrease in happiness score would be the People&apos;s opinion on Freedom. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='22791' hidden='true' id='11' story-point-id='13' w='22744' x='6951' y='24186'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='8'>Æ </run>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Social Support yearwise. Social Support score has decreased in the year 2016 and has had an increase for the next 3 years. We can see that in the year 2016, one of the main reasons for decrease in happiness score would be the Social Support score.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='23605' hidden='true' id='12' story-point-id='14' w='20305' x='69817' y='25465'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Generosity yearwise. Generosity score has continuously decreased till the year 2018 and had an increase in the year 2019. We can see that in the first 4 years, one of the main reasons for decrease in happiness score would be the Generosity score.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='29535' hidden='true' id='13' story-point-id='15' w='30854' x='7744' y='25698'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Health(Life Expectancy) yearwise. Health has continuously improvised from 2015 to 2017 and had a sudden downfall in the year 2018 and again rised in the year 2019. We can see that in the year 2016, one of the main reasons for decrease in happiness score would be due to Health. The lower level of Health can be attributed to the  low level of public investments in preventive health facilities such as sanitation and waste management, as well as in medical care facilities such as primary health centres and health professionals. </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='53140' hidden='true' id='14' story-point-id='16' w='15061' x='6159' y='18372'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='10'>The below graph shows the change in Economy(GDP per Capita) yearwise. The GDP has continuously increased from 2015 to 2017 and had a sudden downfall in the year 2018 and again rised in the year 2019. We can see that in the year 2018, one of the main reasons for decrease in happiness score would be the GDP value. The lower GDP growth figures are attributed to weak domestic consumption so, the Indian economy reported continuous decline in GDP growth rate over the year 2018.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{9A4938A1-59F5-43E0-B0FE-37DFAF6169F4}' />
    </dashboard>
    <dashboard name='Top 10' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#ff0000' fontsize='22'>Who is better in what?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#333333' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5923' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='6852' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83044' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='16027'>
              <flipboard active-id='7' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q1-2' id='7' />
                  <story-point captured-sheet='Q1-1' id='8' />
                  <story-point captured-sheet='Q1-3' id='9' />
                  <story-point captured-sheet='Q1-4' id='10' />
                  <story-point captured-sheet='Q1-5' id='11' />
                  <story-point captured-sheet='Q1-6' id='12' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18837' id='6' story-point-id='7' w='25610' x='55732' y='19070'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the top 10 countries in regard to  GDP(Economy). Through this graph we can view that Qatar has the highest score of 1.7 followed by Luxembourg and Singapore. Due to Qatar&apos;s high GDP, it is one of the richest country and also ranks a high position in the world happiness report.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18953' hidden='true' id='7' story-point-id='8' w='28598' x='52500' y='21744'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the top 10 countries in regard to the score given by people for Freedom. We can view that Uzbekistan has the highest score but has one of the least happiness score and rank. On the other hand Norway, the 2nd highest country in regard to freedom ranks the highest position in the world happiness report.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='21512' hidden='true' id='8' story-point-id='9' w='28720' x='53171' y='25930'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the top 10 countries in regards to generosity. We can clearly view that Myanmar has the highest score of 0.72. Though the score is less when compared to the other factors , the score of the 2nd highest country is 0.5 which is very less. So on an average Myanmar has the highest score in terms of generosity according to peoples opinion.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='20581' hidden='true' id='9' story-point-id='10' w='26159' x='55366' y='23837'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the top 10 countries in regards to Health(Life Expectancy). We can view from the graph that Singapore and Hong Kong has the highest score amongst the other countries. Which implies that these countries have very good health infrastructure and higher life expectancy.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18837' hidden='true' id='10' story-point-id='11' w='28841' x='51768' y='22674'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the top 10 countries in regard to  Social Support score. Here we can clearly notice that Iceland has the highest score of social support in terms of peoples opinion which implies that people in Iceland have enhanced quality of life in adverse life situations due to the support from their family and friends.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='25349' hidden='true' id='11' story-point-id='12' w='32744' x='51037' y='17907'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows us the Score given by people with respect to how much trust they have towards the government in terms of corruption. Through this graph we can view that  Rwanda and Singapore has the highest score. Another important point to notice is that though these countries has the highest position, the score is less than 0.5 which is very less when compared to all the other factors. So we can understand that on an average the trust on government is low throughout the world due to activities like corruption.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{B0639B79-A76C-4AFF-92B7-07A6FB20B5BC}' />
    </dashboard>
    <dashboard name='Variations' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#ff0000' fontsize='22'>Why the change?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='color' value='#333333' />
          <format attr='background-color' value='#ff9d9a' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5923' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='6852' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83044' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='16027'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q2-1' id='1' />
                  <story-point captured-sheet='Q2-2' id='2'>
                    <capturedDeltas>
                      <worksheet name='Q2-2'>
                        <filter class='categorical' column='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]'>
                          <groupfilter function='member' level='[none:Table Name:nk]' member='&quot;2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q2-4' id='4'>
                    <capturedDeltas>
                      <worksheet name='Q2-4'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Social Support:qk]' scope='rows' value=' Social Support' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q2-3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Q2-3'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' scope='rows' value=' Economy (GDP per Capita)' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Q2-5' id='5'>
                    <capturedDeltas>
                      <worksheet name='Q2-5'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Generosity:qk]' scope='rows' value=' Generosity' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='26977' id='6' story-point-id='1' w='9451' x='89573' y='26395'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This table displays the countries that are improving and deteriorating throughout all the five years (2015-2019) on the basis of the happiness rank.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='37326' hidden='true' id='7' story-point-id='2' w='9268' x='89634' y='45581'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>From this bubble graph we can come to know that the social support and economic GDP makes some changes in the the improving and deteriorating countries compared to other aspect.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='16279' hidden='true' id='8' story-point-id='4' w='26768' x='60854' y='48372'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows that Social Support score of the improving and deteriorating countries from 2015-2019.We can see that the Social Support score of improving countries is higher than deteriorating countries.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='16279' hidden='true' id='9' story-point-id='3' w='24024' x='5732' y='71628'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows that Economic GDP score of the improving and deteriorating countries from 2015-2019.We can see that the Economic GDP score of improving countries is higher than deteriorating countries.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='19535' hidden='true' id='10' story-point-id='5' w='26829' x='6037' y='66860'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows the Generosity score of the improving and deteriorating countries from 2015-2019. We can see that the Generosity score of deteriorating countries is higher than improving countries. Even though deteriorating country has the high generosity score but it dose not affect the happiness rank. </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{12AE1AD0-04DF-4F31-98E6-6FE81A45178D}' />
    </dashboard>
    <dashboard name='World&apos;s Smile' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#ff0000' fontsize='22'>What really makes the world happy?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' value='#ff0004' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ff9d9a' />
          <format attr='color' value='#333333' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5923' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9175' id='4' paired-zone-id='5' removable='false' w='99034' x='483' y='6852' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83044' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='16027'>
              <flipboard active-id='1' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Q0-1' id='1' />
                  <story-point captured-sheet='Q0-2' id='2' />
                  <story-point captured-sheet='Q0-3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='34186' id='6' story-point-id='1' w='10854' x='77500' y='59767'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>This graph shows the regions and happiness scores of the countries. We can see that darker shaded countries are mostly a part of North America and ANZ and Western Europe which implies that they have more happiness scores.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='30814' hidden='true' id='7' story-point-id='2' w='9634' x='89390' y='25116'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>From this tree map we can see that the happiness score generally was affected by two major factors, ie., Social Support and Economy(GDP per capita) throughout the world.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='21977' hidden='true' id='8' story-point-id='3' w='9756' x='89146' y='38023'>
          <formatted-text>
            <run fontcolor='#898989' fontsize='10'>In this graph we took the two main reasons and visualized how they affected the happiness scores of each region. </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{3130B183-51BA-4AE2-9534-BC7328B70E5C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' maximized='true' name='World&apos;s Smile'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D59FFC43-905E-43C7-B5B1-96B358FE7A6A}' />
    </window>
    <window class='dashboard' name='Top 10'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5737C28D-DA80-4481-9169-26D02B530F9C}' />
    </window>
    <window class='dashboard' name='Variations'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3F7CC44F-FE08-44C8-A0DB-EFFAB72E260E}' />
    </window>
    <window class='dashboard' name='Generosity and health'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{652A619A-512E-4B53-9620-36946815C560}' />
    </window>
    <window class='dashboard' name='Economy and happiness'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5DF6D282-7F8D-46E9-920A-8F8F285E108F}' />
    </window>
    <window class='dashboard' name='India'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{30230C09-E9BD-4FA2-A3F8-C36276456316}' />
    </window>
    <window class='dashboard' name='Freedom and trust'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BF5216EC-7872-48DD-84D2-7A31D816D37E}' />
    </window>
    <window class='dashboard' name='Bottom Problems'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D0A74079-35EA-4910-8E60-C13F69F978AF}' />
    </window>
    <window class='worksheet' hidden='true' name='Q0-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E962075-4ED4-42E3-AD95-FBDF724E6DEF}' />
    </window>
    <window class='worksheet' hidden='true' name='Q0-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C62B8580-E4D8-4A05-9D2A-3381A13481D8}' />
    </window>
    <window class='worksheet' hidden='true' name='Q0-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' show-all='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC217897-B21A-4DF8-B73D-B9E26A58D094}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB48DFD7-57B1-47D6-ADFD-EE55EBCF12B8}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A97653F-D616-4E0C-9D17-F001FC699F68}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3B844B0-EC52-42B8-AD96-F900CDD06ECD}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF34DF5D-CFFE-4D6C-801F-4F70E57647B7}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71B9A486-BC0A-47ED-B517-EF9FCDB76DD7}' />
    </window>
    <window class='worksheet' hidden='true' name='Q1-6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8AC0FF1-7906-4BAC-9E1E-C6BDD5F0846F}' />
    </window>
    <window class='worksheet' hidden='true' name='Q2-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD595EC4-9251-4096-B45A-10359F20D404}' />
    </window>
    <window class='worksheet' hidden='true' name='Q2-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B21C5AA5-AB43-4AE2-AB24-E4A2CD9DB7D6}' />
    </window>
    <window class='worksheet' hidden='true' name='Q2-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8A62CA9-F567-4125-AE85-C1564BA5A99D}' />
    </window>
    <window class='worksheet' hidden='true' name='Q2-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62074AEA-D5AF-48F5-ACDE-45C66B771C02}' />
    </window>
    <window class='worksheet' hidden='true' name='Q2-5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Country (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D224AEF5-7AA0-4DF1-8384-E5379EA9A71C}' />
    </window>
    <window class='worksheet' hidden='true' name='Q3-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Health (Life Expectancy):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Health (Life Expectancy) (bin):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C08EAF0-CBCA-4226-B7AB-644BE9D7AF46}' />
    </window>
    <window class='worksheet' hidden='true' name='Q3-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Generosity:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Health (Life Expectancy) (bin):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{753295D6-DC96-41F6-950B-5590CE4641AB}' />
    </window>
    <window class='worksheet' hidden='true' name='Q3-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D342E088-D406-4014-8BDF-1CCD351F10C6}' />
    </window>
    <window class='worksheet' hidden='true' name='Q3-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5638EBD-5665-4CB8-A9A9-B45E9DBF9388}' />
    </window>
    <window class='worksheet' hidden='true' name='Q4-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44952B16-A632-478D-A943-F629C9877CA4}' />
    </window>
    <window class='worksheet' hidden='true' name='Q4-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{912F495A-145A-4ABB-B873-3B115CC732FA}' />
    </window>
    <window class='worksheet' hidden='true' name='Q4-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E68625D8-3850-4164-AC3C-6C8809A407D4}' />
    </window>
    <window class='worksheet' hidden='true' name='Q4-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]' type='filter' />
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[Region (group)]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Economy (GDP per Capita):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B639C15-376A-4537-A786-6B1B34E92175}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{264E9C28-D89A-495D-AA2F-2AF2BD3CC483}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4DC5986-1495-4AB0-A4D2-7CC36386B0D5}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-3'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFE3D87E-3721-4734-A0F8-88B900278543}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-4'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{242180BF-20DF-409B-982F-1D925E5A87EF}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-5'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5EB17CAA-826D-4F3C-B897-A6077D600293}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-6'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9532C22-94E5-4A64-89FB-631578A14137}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-7'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07010037-A9A6-45B5-878B-663F6CAAA062}' />
    </window>
    <window class='worksheet' hidden='true' name='Q5-8'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{071DA8F4-A0AD-49F7-B4E2-280C239A54D7}' />
    </window>
    <window class='worksheet' hidden='true' name='Q6-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Trust (Government Corruption):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Trust (Government Corruption) (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{540E08B9-775B-4112-A8DA-5776153C346B}' />
    </window>
    <window class='worksheet' hidden='true' name='Q6-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[cnt:Freedom:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Freedom (bin):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B131185F-D6D7-416A-9B07-7A1CF3478EDF}' />
    </window>
    <window class='worksheet' hidden='true' name='Q6-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F30F2584-4C63-40B3-A536-836D0CAC319A}' />
    </window>
    <window class='worksheet' hidden='true' name='Q6-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='shape' />
            <card pane-specification-id='2' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Happiness Score:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Region:nk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFC87279-36D3-4183-B1FE-33BF7CA357A7}' />
    </window>
    <window class='worksheet' hidden='true' name='Q6-5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]' type='color' />
            <card pane-specification-id='5' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Freedom:qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[avg:Trust (Government Corruption):qk]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEA7A772-D65E-4B39-A4D8-15E06072C781}' />
    </window>
    <window class='worksheet' hidden='true' name='Q7-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41E0C005-6503-41BC-A413-C5312FA1613B}' />
    </window>
    <window class='worksheet' hidden='true' name='Q7-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[:Measure Names]</field>
            <field>[federated.1t49t91023o01u11p7xty0dvxfsq].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C34F4025-A812-49B2-9EBF-B450C8A410B5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bottom Problems' width='192'>
      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
      ypoEQJS1/w9bzqqsPdcAJQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Economy and happiness' width='192'>
      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
      u935/wET5WyRRLlnpwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Freedom and trust' width='192'>
      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
      QzDR7fw/TZIj+8d5tBAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Generosity and health' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='India' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Variations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World&apos;s Smile' width='192'>
      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
      0xEW1jxm1eFwIEkSu3btoq6ujoULF/LKK6/Q2NiIyWQiISFBGIPh4eHccsstzJ8/nz//+c/U
      1dURGhpKv379cLvdFBQUMHbsWCIiIigsLAxwgSrXCQsLIzMzE6vVitfr7TSBSZKEw+EQqord
      bu9WJmgpLGRZvuzS2mVZ5syZM6xfv57Q0FBOnDhBbW2tyMeqrKzEYDDgdDpxuVzEx8dz/Phx
      Nm3axI033ki/f80/7uo1of2dTZIkbrrpJpYtW9ZzO8CyZcvIyMigpqaGFStWsH37diorKwkL
      CyMqKoohQ4aQkZEhDM+21JPY2FgsFguNjY1IksSgQYO44447SEtLQ6vV8vrrr7N69Wo8Hg8P
      PfSQCHnn5uZy8uRJRo8ejUajQafTodfreffdd9m/fz8FBQWkpaVx2223kZyczKlTp0hOTkal
      UnH69OlW9yLLMpGRkahUKkaOHElo6LmnUSrqiOIKVSR1T3lodDodZrP5skqAa2hoIC8vjxdf
      fBG73U55eTmVlZU0NjYKe8xisdDQ0IDX6xXpG8XFxTQ0NIjU/KCgoE4H+GRZZsuWLRw7doyU
      lJR2mcButzNixIieY4BXXnmFU6dOcfToUXFjeXl5fP3111RWVtK3b1+Sk5P52c9+hk6n4/Dh
      wwHHp6amsnDhQoYNG0ZTUxNWqxWHw8GIESMoLy9n8+bNbNq0icbGRsLCwrjhhhvYunUrpaWl
      NDQ0EB8fz44dOygtLSU9PR1JkqiqquLQoUO4XC7Ky8u54YYb8Pl8lJSUMGLECOrq6qitraWm
      piaAUF0uFyEhIcyePZu0tDSReHYuSJKETqdDo9GI87VliF8oLkfiLykpYcWKFZSVlXH48GFO
      nTqFLMtiN3S5XEiSJNRhlUpFYmIiMTExqNVqZFmmpKSEzMxMtm/fjs/no3///ud8Rq/Xy9//
      /nfKysoYM2YMer0em81GVlYWcXHNw7udTieHDx/u+XTollB09lWrVrF69WrUajWJiYnMnz+f
      mJgYLBaLiBMAfPHFFxQVFfHII48wZswY4TaLi4tj4sSJJCUl8d5776FSqbDZbEyZMoXMzExk
      WaahoYGamhr27t3LvHnzMJvNfPvtt8iyLAxGp9NJbGwsqampxMbGkpKSglqtxu12iyiyct+K
      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
      YII=
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Ratings/0.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAglpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWPzIl
        S4ga6Itm4SRwDKRbWWJiwpYokHSt+Gpd9Ei9QinXcovCNbnhDN+bN0PO3N71XVltuAEr/iba
        CP78/gMCUUfwhc3xvEv5Wnw5KP58eFhWh00V1PDuM7jtw77pGm5K0DfbVod9BMtarnhoz4Mb
        QXCEmE0E4+ECfJ0/gVQqDpjjTSrs+cAPHMJ8f+p/AhQThrCLXDyhbjjF4ZSC04JWTdWv4SIr
        TlrWiuDamC5EaL/fO3vXkeoNkSAIEKaI0olFTPR7a8p+0uqbMULGdaVEZ4RswWCXK7kzEYRj
        CU03n58Dt9o5FuRUskF92SHiYNQ0aERrs+Cv19F6+d5xtOBa7lTFLfzmL6nr1AFoswkflbCf
        Um4zWe0a3pr7LIL2xqlFHU5jLyMZ82K7s4yQWZJ4KSUFY3nuMhyPMS5xWezPEs8v8rxghOQs
        mblJHrCE5llcxDgbufetNmVb8ZEr/nDzq9wwVbw0Ui2l3I4d8LSWRuq17ED67IEPL6Kt5V5/
        HL7nlClX4huvCyUbcHzfUFzSL2IvmRKWMeZafTeJi1lKYxrnmAa5h+GJW1+q+zfX+y8X2WTQ
        P80yumwHDsdz61vjPDy8tROj7Gj8Ai0LBz3D7AU2AAACk0lEQVRYhd2YsWobQRCGvwvB+AWC
        IZUwLqJGChcwBEJwoRcwCJeBVDa49APonkCtyuCoMMaoCrgOIRAwRGBjUIxdqHFCEGqFrEKb
        Qv/ivSWRTrJOPmVgGW7ndv5Pe7OrvQuMMWTZnjw2wCTLPODTWQcGQVAEXgMhkAdywDOFO0Ab
        aAFN4Btw/rc8E0vMGJO4AQFQBupAFzAJW1djysqRWD9IukiCINgC3gPv1PUT+AKcARfADfBb
        sTVgAygAm8Bb4LliH4EPwOe5zSCwD1xpNi6BClCYYgcoaMylclwp52TtCWArQAQMgCFQA0Ln
        cZcU/wRcAz21a/VFusc+1lA5hsoZASsPAYz0i38BB07/DtAgeQ02NMbagXIaIJoJUI9goES7
        6lsHqkB/Cjjb+hq7Lshd5R4A+1MBAluqk6GdOeAlcDIDmN9OlMvO5FBaW4kAVS+HSlZzZm4e
        cC6kncma+g5htKtMAixzv1rtgqjOEc62qgBD7ld3OQlgXTdXnAUxS80lqckdaVTUVx8LCBQZ
        7fq3jPaugOlW67StIY2CNLtAcRzgngYe6bqUIpxtJWkd6XrPZfJPM6H8mfwb0jerYTVDN+gD
        5uUv5F+lBOWa1bCaeTfoA+bkb+RfpMMUM6thNXOxqFeDdrWu6rpH+jXYk9aqrvvjajBz5gN2
        5NfkbxfAYDWsZscN+oBt+Q35H+kwxcxqWM22G/QBW/IF+e/pMMXMaljNlhv0AZvym/JfU4Jy
        zWpYzWYsmvW/utgMGmPOgVNGLzjbZkR9DNw9YIb+ZXfAsTS2pXkqhhjU0h23sn1gzfyRfyle
        mhzISMmz99opkGy/uHuP+1E+ffwfH4+8LSibn998W9QHzJkBF2VLd6LOnP0BpfEWCrijfekA
        AAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/1.png'>
        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
      </shape>
      <shape name='Ratings/2.png'>
        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
        6szZb2yPuQYIjLLqAAAAAElFTkSuQmCC
      </shape>
      <shape name='Ratings/3.png'>
        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
        eMBfUiY/3MsqrycAAAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/3bw.png'>
        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
        AAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TzY6bMBB+Fct7aaUG/4Ah
        oKUrg0HdQ9pVNtL2SsC7QQkYGadh82o99JH6CjVRiKoqjX3xjL9vvhl75v5h6IpyKw1Yy7e6
        jeHvn78gqKsYvrAFXnSp3NRfjlo+H7+uyuO2DCv48BncD9HQdI00BRiaXdtHQwyLSq1lZM+j
        G0FwgphtDPl4Ab4vnkCqtATM8Wcl9gMQhA5hQeAFnwDFhCHsIhfPqBt5OPIoOC9o1XT1Gi1F
        ftayVgw3xnQRQofDwTm4jtJviIRhiDBFlM4sYta/t6YYZm1/N0UQsi913ZlatWC0i7XamxjC
        qYSmWywugdveORXklKpBQ9Eh4mDUNGhC92YpX2+j+9V7J9FS9mqvS2nhd39J3aaOQJtN9E3X
        9lOKnVDlvpGteRQxtDdOVVeRx31BBPO53UIQMk8SP6UkZyzLXIb5FOMaN+Wh8JIszbI8ICRj
        ydxNspAlNBM851hM3Me2N0VbyolbWy4nuet5hN7kRqmWhVF6pdRu6oCnjTKq36gOpM8++PBS
        t5U69B/H7zlnKnX9Q1a5Vg04vW9UX9FneZ6TzMeCMdfquwnP5ynllGeYhtYPz9zqSt0+JpyH
        6fy/XGSTQf80y+SyHTgeL61vjcvwyNZOjLaj8QdIqgdWjPETXgAAA61JREFUWIXV2EuIVEcU
        BuCvgsR9ghg0CxFxnBYmMkIHQYaAOzchxsdOcJEIKoIoCHGRdqEgKAExgnEhJCufwY07QUSQ
        NDio6IwtImahJIjZGwKVRZ2LnU5rX8dRZ34oTnedrvr/rse559yUczaT8cH7FjAIM17gnKkO
        TCl9hlUYxTAWYV64n+IRJjGO67jVb56BRyznXLshYT1+wTPkmu1ZjFkfc9TmT3UvSUrpC2zB
        5uh6gqto4zYe4M/wzccSjKCJMSwI3884hSvTtoLYjk6sxh18j5HXiAAjMeZOzNGJOd9sBVNK
        H+K7aHNwAicnmkPjylatwWqsxDIsjKGPcQ83cA2XG+1OVs7rN9iKf3AQB3POf79UwwCBrfjn
        f+DwRHPoSLg2YhPWvXTwf3EBpxvtzpn4vht78An255xbry0wpbQdPygHvDXRHDqBxdiBbZhb
        U1yF5ziOY41256Gyii18jF055x/7DeobB+NC7FS29XCIW4FD2DUFcWLMLhyaaA6tUI7L4eDY
        GZyDBaaUknJbl+JEbOti7FPCxJtiPfZNNIcW40gIXYotwf1qgfhaCSV3cTL6dkyTuG6RO+Lz
        yeDaHNwDBX4Z9mzc1o3KmZtubJtoDm3MOY/jbA93f4Hx+FqrBOFflVCyydTO3CDMxabJz5el
        4HqCtaGhv0Dl2foRruacbytxrm4omQrWYU1wXQ3uVa8SOBq2HXb1WxRXoeKoOEe7nb0Ch8Pe
        DruyJskTJaYtj9aKvjqoOCrO4W5nb7q1KOyDsMtqkvyE/V3fq8+tGmMrjopzUbezdwWrfK7K
        Shaqh7M1+/qh4qg453U7Z3xG3Svwadj5YR/XnGdDzb5+qDgqzqfdzt4z+AifKsnm70rKtKQG
        ybdhq23d0NU3CPfCVjyPup29KzgZdiTsjZokC5QLcTday4sMehAqjopzstvZK3A8bDPstZok
        b4KKo+Ic73b2CryOvzCWUhrBZSXZfFu4gMvBNRbc118qMOd8C5eU7flKqR9OK8nmdOM5Tg//
        di8H1wJcCg39BQYuht3QaHdGcUbJhKcbxxvtzpmU0qgXN/5i74/6CTyvlIbLlQIHjuHcNIo7
        F3MKjuXBeX6gwFyKlFO4j62Ndmc3HuLANIk8hwNRl+xWapP7OJX7FEh9nyQ55ys4qpSGexrt
        zlbcxF6lkJrKmXweY/c22p2bIWxPcBwNzv9h9padIfC9F+6z+9VHN2b0y6NZ8fqtF+/qBeaU
        Bb4rzLqMesbhX3yrSAAvufyVAAAAAElFTkSuQmCC
      </shape>
      <shape name='Ratings/4bw.png'>
        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
        QQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/1.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhlpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFuGAc
        QGUV2KD1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VgAdf+5x7z8H33t4NXVFuhUZr8VK3
        Mf798xdGdRXjJ3/hLDomNvWXoxKPx6+r8rgtwwrffUa3QzQ0XSN0gYZm1/bREOOikmsRmfW4
        bWN0guhtjJPxAH1fPCAmlUC+5c1KBwBRagHxKYVPyHXAtR3z0RmQyKeRO0fnB5tqqnqOljw/
        1zJRjDdad5FtHw4H6+BZUr3YEIbhmMN1ZwYx619bXQyztr+ZMnDRl6rudC1bNMbFWu51jPFk
        oekWi0vitrdOhqxSNvZQdDZYjt009oTu9VI8X0f3q9dO2EvRy70qhYHfvCl1nToCjZrom6rN
        pRQ7Lst9I1p9z2NsTqyqriKSUA7cp4l5OQcI0pQyF3LfzzLPd5Ipx3vcbE4oEJpykqYAmZeA
        m7GQQ8ID5vicT9z7ttdFW4qJW//jJle5EVOi0FKtpNxNHfCwkVr2G9kh9kjRh6e6reSh/zhe
        z1mpUPUPUeVKNuj0f6P63foZY0ECqVGfeQCJGzgBeISReUgcanz/5VZvfO/3hpgTlvuEOcDn
        Ac8A0rkPWW5knxwAwbZRYv/XKdOWab9xeel7E1wmR7RmXJSZiz9oZQXg4qSv4wAAAKtJREFU
        WIXt1TEOwyAQRNGdKMdOYczBxw1NJBQHZu2gaL5EB8sTLgySsXKPXwPOemYNAvD2KUgiY+7y
        L2igmoFqBqoZqGagmoFqBqoZqGagmoFqBqoZqPZfQAAbAPZWZ293H4AyJCQ5tCJiiwhOrjJ8
        3+iBhix34KaBE8h9+p7Zgw25X4mTgV8gJVwK8AOypszOGNKQNRtHMtCGpwSgRgRIvtJmZgKv
        aPlf3QEsV9DhQ2LKtwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TzY6bMBB+Fct7aaUGM/yD
        lq7ABnUPtKtspO2VgHeDEjAyTsPm1XroI/UVatKQrqpVbB889vfNzGfP3N6NfVltuUJr/tJ0
        Mf798xdGTR3jJ7cwi57yTfPlKPnj8euqOm6rsMZ3n9HtGI1t33JVorHddUM0xrisxZpHej8d
        E4xOELWNcTJdoO/FA6JCcuQa9qIyAZDnGeC4ngefkGWCRUy9vAU4ketFlo/OA+tosn6Oliw/
        x9JWjDdK9REhh8PBONiGkC8EwjCcfFjWQiMWw2unynHRDTezB8aHSja9akSHJrtci72KMZ4l
        tH1RXBx3g3ESZFSiJWPZEzBM0rZkRg9qyZ+vo4fVa8/Jkg9iLyuu4TdvQl2nTkCdTfRNNvpT
        yh0T1b7lnbpnMdY3Rt3UkZN4DJjrJXoyBhCkqUctyF03y2zXTGYf73Ez36eWnWbMSVOAzE7A
        ymjIIGEBNV3GZu59N6iyq/jMbf5x2VVuRCUvlZArIXZzBTxshBLDRvSIPnrow1PT1eIwfJy+
        55wpl80PXudStOj0vlHzbvyM0iCBNGVOZgMkVmAGYDvU8UPH9LTuv9z6je79XhNzh+auQ01g
        fsAygNR3Ict12icF4GCiMyH/Vcp8pMtv2l7qXhuXzuGdbhep++IPsyEGHiREplMAAAFWSURB
        VFiF7dhNShxBGAbgpyUbd3oFtznFaOKYECRoslCC+IOIhJDkDF7C27jN1kWOkaX5MWq5sAeG
        oapntKX7W8wLHzRd9FsPtehFVSklkbPQN2Ba5sC2mQPb5kVpoaqq0eMiVvBz1tLn/DNMO8El
        XOASH59t18ckpZQdDyf3A6me//jQpvMp0wR8iZsxYMI1tqMAYSeD/IetKEDYfSyyayB8KiDf
        RwHCXgG5GQUI+wXkuyhAOMBtBvk2CrAJ+SYKEA5xl0NGAcJRBvkXG1GAcJxB/sEwChBOMsjf
        WI8ChNMM8gqvGwEsdQVsQr4q7DFA6hIInwvItYn+1dF610D4UkAO6u618bXOgfX3XwvIs4l3
        /QDrjm+TmNz0Bqx7vocG1l3nYYFYb8L1CpwF1wsQFYaz4KYBqxJm7GbhKbhl/Jr1g5RScbMi
        MErCXx7NgW0zB7ZNeOA99xN4NoIa7C0AAAAASUVORK5CYII=
      </shape>
      <shape name='Thin Arrows/3.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhtpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMAm
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9mXn2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtGVb47jO6HaKh6RqhCzQ0u7aPhhgXlVyLyOzH
        YxujE0RvY5yMF+j74gExqQQiljcrHQBEqQU+oRQ+IdcB13bMojPwI0IjN0DngU00VT1HS56f
        Yxkrxhutu8i2D4eDdfAsqV5sCMNw9OG6M4OY9a+tLoZZ299MHrjoS1V3upYtGu1iLfc6xniS
        0HSLxcVx21snQVYpG3soOhssx24ae0L3eimer6P71Wsn7KXo5V6VwsBv3oS6Th2BJpvom6rN
        pxQ7Lst9I1p9z2NsbqyqriI/oRw4oYmZnAPM05QyF3JCsswjTjL5eI+bBQFzPUa5n6YAmZeA
        m7GQQ8LnzCGcT9z7ttdFW4qJW//jkqvciClRaKlWUu6mCnjYSC37jewQe6Tow1PdVvLQfxy/
        55ypUPUPUeVKNuj0vlH9bvyMsXkCacr9zANI3LkzB89nfhD6DjW6/3KrN7r3e0PMfZYTnznA
        gznPANKAQJabtE8KwMe2ycT+r1KmI1N+4/ZS98a4dI5oTbso0xd/AJGrBgJ5iayRAAAAl0lE
        QVRYhe3WQQqEMBBE0a8XH6MHL3eCECNOg11Cf8jChfCIxM4kCefmbMBdBYxWwGgFjFbAaPZA
        JJEw7n49Q29lAQUs7kABzR0ooLkDh0gXoIDVHShgGwGvXnp7be7AE/JTkyR7124/8Zv9dUiy
        gda/mS7OBWg96qwvC+14MAQuJ+0AOCXgHmU/SQoYrYDRChitgNHsgTs9+h3Oc8h/lQAAAABJ
        RU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGM4AJ
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9mXn2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfqILe9Exsam/HJV4PH5dlcdtGVb47jO6HaKh6RqhCzQ0u7aPhhgXlVyLyOzH
        Y4LRCaK3MU7GC/R98YCYVAJRy52VNgDyfQs86vvwCTk2OMQ2y5+BF1E/cuboPLCJpqrnaMnz
        cyxjxXijdRcRcjgcrINrSfVCIAzD0YfjzAxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGONJ
        QtMtFhfHbW+dBFmlbMhQdAQsmzQNmdC9Xorn6+h+9doJshS93KtSGPjNm1DXqSPQZBN9U7X5
        lGLHZblvRKvveYzNjVXVVeQlPgdO/cRMzgGCNPWZAzmlWeZSO5l8vMfN5sxwE+BemgJkbgJO
        xkIOCQ+YTTmfuPdtr4u2FBO3/se1r3IjpkShpVpJuZsq4GEjtew3skPs0Ucfnuq2kof+4/g9
        50yFqn+IKleyQaf3jep342eMBQmkKfcyFyBxAjsA12PePPRs3+j+y63e6N7vDTH3WE49ZgOf
        BzwDSOcUstykfVIAHiYmE/JfpUxHpvzG7aXujXHpHNGadlGmL/4Axv0GLiw4tnkAAAFTSURB
        VFiF7dhLSsRAFIXhv8RJz9otOHUVbWPbioj4ABERH4iIii7CRbgkXYDLEEe+H9eBUZpwbxKt
        6qoa5ECNUjn1pZJMyokIOWciNaAuLdA3LdA32QMnrQvOuf92OmAKuGt6g4iYi41jBwW4B4Zh
        2kTUEaITGPANrhyWQUTGC2yKTAosuq6yBQIXVbikQOAc+MwSCJwpuAfgMjkQODVwvaK7nxJ4
        YuD6pf7ZFMBjAzdnrNGLCTxScI/AoBIA3RjAQwM3X7V4kxECeKDgnkLgQgA13DMwDIHzBe4r
        uBdgIRTOB7gHfCi4RbA7YwF3gXcFt/QzISVwpw6XErht4JbLE1MALdyK9iSxgVsGblX/CuIC
        Nw3cmoWLCZxRcK91uJjADnAzgnsD1utwsV9xF7gudnKjCS400JV+iN+MnCx0gGng9i/AUDGB
        uST7w6MW6JsW6JsvEJOUNWZ3BWoAAAAASUVORK5CYII=
      </shape>
      <shape name='Thin Arrows/5.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhtpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGLAJ
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9mXn2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfqILZ9Exsam/HJV4PH5dlcdtGVb47jO6HaKh6RqhCzQ0u7aPhhgXlVyLyOzH
        YxujE0RvY5yMF+j74gExqQSiljcrHQDk+xYQ6vvwCbkOuLZjlj8DElE/cufoPLCJpqrnaMnz
        cyxjxXijdRfZ9uFwsA6eJdWLDWEYjj5cd2YQs/611cUwa/ubyQMXfanqTteyRaNdrOVexxhP
        Eppusbg4bnvrJMgqZWMPRWeD5dhNY0/oXi/F83V0v3rthL0UvdyrUhj4zZtQ16kj0GQTfVO1
        +ZRix2W5b0Sr73mMzY1V1VVEEp8Dp35iJucAQZr6zIWc0izzqJNMPt7jZoHrMiennKQpQOYl
        4GYs5JDwgDmU84l73/a6aEsxcet/XHKVGzElCi3VSsrdVAEPG6llv5EdYo8++vBUt5U89B/H
        7zlnKlT9Q1S5kg06vW9Uvxd/njEWJJCmnGQeQOIGTgAeYWQeEsc3uv9yqze693tDzAnLKWEO
        8HnAM4B0TiHLTdonBUCwbTKx/6uU6ciU37i91L0xLp0jWtMuyvTFH4VpBfgcZI6ZAAAAlklE
        QVRYhe3YwQqEMBCD4cQXX+2LZy8K60Wxmaqw+WGu049eCqUkvLnpacBZpUCSjWSr3AlJJQOg
        AdA6rWxvEW75wZUiR+G2WR4FApgPcCXI0TgbeQdum/kWYCeuG3kV9zFwXUiuB9uR3C2SxIq9
        //XUjShAtwDdAnQL0C1AtwDdAnQL0C1AtwDdAnQL0K3s62NUr7/BL6EcE3ZmUmbpAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='Thin Arrows/6.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh5pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWOfpb
        iBpIpIRm4TZwDKRbWWJiwZYoUHSt+GpZ9Ei9QinXMoIiMMkFh3xvZh45c3s3dEW5FRqtxUvd
        xvjP22+M6irGT96CLjomNvW3oxKPx++r8rgt5xW++4puh2houkboAg3Nru2jIcZFJdciMvvx
        mGB0guhtjJPxAv1cPCAmlUCe5cxKCoB83wLX8334gmwKNqFm+TNwI8+P7ACdBzbRVPUcLXl+
        jmWsGG+07iJCDoeDdXAsqV4IzOfz0Ydtzwxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGONJ
        QtMtFhfHbW+dBFmlbMhQdAQsSpqGTOheL8XzdXS/eu0EWYpe7lUpDPzmXajr1BFosol+qNp8
        SrHjstw3otX3PMbmxqrqKnITnwP3/MRMzgHCNPWZDbnnZZnj0WTy8RE3CwMIQ+pwN00BMicB
        O2NzDgkPGfU4n7j3ba+LthQTtz5xbZvRnF3lRkyJQku1knI3VcDDRmrZb2SH2KOPPj3VbSUP
        /efxe86ZClX/ElWuZINO7xvVH8UPMsbCBNKUu5kDkNghDcFxmRvMXeob3f+41Tvd+70h5i7L
        PZdR4EHIM4A08CDLTdonBeBiYjIh/1XKdGTKb9xe6t4Yl84RrWkXZfriL3dTBfCNz2LSAAAB
        UUlEQVRYhe3YTUoDQRCG4bfEjbuAt4in0KCJIiL+gIiIRkSCiB7CS3gUvUFO4RFcafxvF9NC
        kO6exOqZ1GI+6NX01DzUFD0w4pzDcuZmDShLA9SmAWpjHjifuigi05xBi8AT4AByHV+5Othj
        DJczyQ5OmB5wn6FOMFpgF3jIAYlF84rvqBgHFMMcWxQzlVo3/6k7zdICv4FrS8Bb4DmAvLIA
        7PhndyLIy1kCV/40qBRZJ3A5NGPAagQ5qBPYiuB+swa8BJAXdQEnSRcYBZDnVoAp5JkVIBTf
        5NfcyJxAgHXgLYDsWwECbASQX8CpFSDAZgD5CZxYAaaQxyaA/v4tLbJSoK+xHUEemQD6OjsR
        5KEJYAnywATQ19sF3gPIJRNAX3MP+BgDDoEFM0Bfd5+ic0OgldorKYiIqICpiEgbeHTOjZL7
        tJ2qOuZ/HjVAbRqgNj/z3OYcc5aDLgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/7.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhppVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TXW+bMBT9K5b7skkL5vIN
        KqvABq0PbFUaqXsl4DYoASPjLDR/bQ/7SfsLM1nIqqkK8OBrn3PvOfje27uxL6stV2jNX5ou
        xr9//sKoqWP85BZm0VO+ab4cJX88fl1Vx20V1vjuM7odo7HtW65KNLa7bojGGJe1WPNIr6dt
        gtEJorYxTqYD9L14QFRIjlzDXlQmAPI8AxzX8+ATskywiKk/bwFO5HqR5aPzg3U1WT9HS5af
        a+koxhul+oiQw+FgHGxDyBcCYRhOOSxroRGL4bVT5bjohps5A+NDJZteNaJDU1yuxV7FGM8W
        2r4oLom7wTgZMirRkrHsCRgmaVsyowe15M/X0cPqtedkyQexlxXX8Js3pa5TJ6BWE32Tjb6U
        csdEtW95p+5ZjPWJUTd15CQeA+Z6iX4ZAwjS1KMW5K6bZbZrJnOO97hZ4EMQmClz0hQgsxOw
        MhoySFhATZexmXvfDarsKj5zm3/c5Co3opKXSsiVELu5Ax42QolhI3pEHz304anpanEYPk7X
        c1bKZfOD17kULTr936h5r76fURokkGr1mQ2QWIEZgO1Qxw8d09O+/3LrN773e03MHZq7DjWB
        +QHLAFLfhSzXsk8OwMFEKyH/dcq8pdtvWl76XgeXyeGdHhep5+IPciUF6HufyBEAAACcSURB
        VFiF7dbRCoAgEETRMfpvrT58ewmSsBQGc4S94KscBF2DmUG5ZTSglgPZHMjmQDYHsskDYWZo
        HHext6G0WoERQLehzQLThZMEbhlODvjESQFLOBng/oKTAB4fuF9XCSiDy4HTTRKZU5z2ktSQ
        MkBA/KF+Q8oBn0hJIHD/aH4Hro17pF64WqHh9IYmP0kcyOZANgeyOZBNHngCPIYgyOQx8O8A
        AAAASUVORK5CYII=
      </shape>
      <shape name='Thin Arrows/8.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TzY6bMBB+Fct7aaUGM/w4
        gJauwAZ1D2lX2UjbKwHvBiVgZJyGzav10EfqK9SkIV1Vq9g+eOzvm5nPnrm9G7qi3AqN1uKl
        bmP8++cvjOoqxk/+wl50TGzqL0clHo9fV+VxW4YVvvuMbodoaLpG6AINza7toyHGRSXXIjL7
        8ZhgdILobYyT8QJ9XzwgJpVAvuXOShsAUWqB51MKn5Bjg0Nss+gMvMinkTNH54FNNFU9R0ue
        n2MZK8YbrbuIkMPhYB1cS6oXAmEYjj4cZ2YQs/611cUwa/ubyQMXfanqTteyRaNdrOVexxhP
        Eppusbg4bnvrJMgqZUOGoiNg2aRpyITu9VI8X0f3q9dOkKXo5V6VwsBv3oS6Th2BJpvom6rN
        pxQ7Lst9I1p9z2NsbqyqriIvoRy4TxMzOQcI0pQyB3LfzzLXt5PJx3vcLGABZczlXpoCZG4C
        TsZCDgkPmO1zPnHv214XbSkmbv2P61zlRkyJQku1knI3VcDDRmrZb2SH2CNFH57qtpKH/uP4
        PedMhap/iCpXskGn943q9+LPM8aCBNKUe5kLkDiBHYDrMW8eejY1uv9yqze693tDzD2W+x6z
        gc8DngGkcx+y3KR9UgAeJiYT8l+lTEem/Mbtpe6Ncekc0Zp2UaYv/gC/mwYoDgOmAwAAAXlJ
        REFUWIXt2MsuBEEUxvH/ERs7ibfgKRAGEXHdIGKIICK8g5fwKNjYWnsBj2DFuM6x6JZMJnWq
        e7qqL4v+klr1SfWvLql0tagqTc5Y3YCstMDQtMDQjPseikjhjrNOBxGZBl5Uteerq2UGRWQH
        eAYeRWTSW6yqZguJp89t4BvQtD0BE2Z9lUBgC/gawCnwA8zUDgQ2gU8HbtdrqAIIbBi4Pd/7
        KwEC6wZuPwtXOhBYM3AHeXClAoFVA3eYF1cmcMWB+wW6o+DKAi4buKNRcWUAXbh+UVxs4BLw
        4cAdF8XFBHaAngN3EoKLBVwE3h2401BcHqD/SyPBvTlwZzFweYAKzBq4BQN3Dv5+YwMVmBvC
        zRu4i/+CqoGaokhn1IW7HBxBHUAFbgzc1fD61wUcbn3g2rVBmwJ04poCvLVwMYGSQpwRkazT
        ugM8WMAYCb123pMgS0uMe/EdCbL4Ld+T0CUezBTwSrI/oy2xF9iENP7nUQsMTQsMTeOBf8+V
        /edOkSzKAAAAAElFTkSuQmCC
      </shape>
      <shape name='Thin Arrows/corruption.png'>
        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
        A6tZmKulEH8C+rZ1fzxECoi/U2V6Oy7ukvK27kx7QhdIE0j5jHKqcOwMiXq7lMyggx8NaAQz
        guUC8XZM2OaVQjzjuHXgHEIXiAOcyP0hzigsNyKYCwxq8YL2zW4En3hZxH+ioqZltXVn2jsd
        WiDPfz0l3mhhGUK1eg9K1gqj8dFFs1e5LSpGZt73/YQwXCUlsxEMof3/DSWCnULKb6Q0fBYX
        ObVdBolur7T3f26TPP/1lHijKnfR8Ex6oVkRSU9c9oPbD1Dl5CyPMRkM0xXkFAnnA53d3aaD
        pCPlLwLxg0FVV0dHz3RLgItzgQ47r7aOHI1HxfBS5VLgKnf3oebGe6/mh6zClQlSyvFIMUrC
        QAFJgHMRGpwnT8IegdyLYBtCbowLm3nczW2eM3RYgVinVY0PgJK2iYoRGzY9DUgDPqx9Lzd3
        VazJQC+hqt0RJIDSDSEjpSQCiEASgcCI9X9Re8ijBDAjMSPIB/KFIB8p8kA9LqWSiiJTjWb1
        qD46uJeOK5DmaTe7vjUL4SxgQ1v3Rcd5Ou55EMnaZj5tN1ExdDo2HVYgwmhsMiqGkMZ2ExVD
        p2PTYQWyaPaqw2ZFJAnsUTGAz4Q0Dll0xcp2ExVDR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHx87/AyAq+B2c
        ZHIAAAAAAElFTkSuQmCC
      </shape>
      <shape name='Thin Arrows/freedom.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='Thin Arrows/generosity.jpg'>
        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
        MJAx+P/BQZbT3M5RegAAAABJRU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/generosity.png'>
        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
        5zn4/wFl0Dmu5h91+wAAAABJRU5ErkJggg==
      </shape>
      <shape name='Thin Arrows/life expectancy(freedom).jpeg'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
